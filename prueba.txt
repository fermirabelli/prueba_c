1) ¿que hace?

int main () {

   int a = 100;
 
   if( a < 20 ) {
      printf("opcion 1" );
   }
   else {
      printf("opcion 2" );
   }
   
   return 0;
}



2) ¿que hace?
 
int main () {

   int a = 100;
 
   if( a == 10 ) {
       printf("opcion 1" );
   }
   else if( a == 20 ) {
       printf("opcion 2" );
   }
   else if( a == 30 ) {
       printf("opcion 4" );
   }
   else {
       printf("opcion 3" );
   }
   
   return 0;
}


3) ¿que hace?

int main () {

   int a = 100;
   int b = 200;
 
   if( a == 100 ) {
   
      if( b == 200 ) {
         printf("resultado" );
      }
   }
  
   return 0;
}

4) ¿Cual es la diferencia entre la logica del problema 2 y el problema 3?

5)¿que hace?

int main () {

   char grade = 'B';

   switch(grade) {
      case 'A' :
         printf("Excellent!\n" );
         break;
      case 'B' :
      case 'C' :
         printf("Well done\n" );
         break;
      case 'D' :
         printf("You passed\n" );
         break;
      case 'F' :
         printf("Better try again\n" );
         break;
      default :
         printf("Invalid grade\n" );
   }
   
   return 0;
}

6) el tipo de problema 5 ¿Es analogo al 2 o al 3 ?



7)¿Que devuelve este codigo?

#include <stdio.h>
 
int main () {

   int a = 10;

   while( a < 15 ) {
      printf("valor: %d\n", a);
      a++;
   }
 
   return 0;
}

8)¿Que devuelve este codigo?

#include <stdio.h>
 
int main () {

   int a;
	
   for( a = 20; a > 10; a = a - 1 ){
      printf("valor : %d\n", a);
   }
 
   return 0;
}

9)¿Que valor devuelve ? ¿Que hace la funcion fun1? ¿Cual seria un nombre apropiado?
#include <stdio.h>
 
int fun1(int num1, int num2);
 
int main () {

   int a = 100;
   int b = 200;
   int ret;
 
   ret = fun1(a, b);
 
   printf( "valor : %d\n", ret );
 
   return 0;
}
 
int fun1(int num1, int num2) {

   int result;
 
   if (num1 > num2)
      result = num1;
   else
      result = num2;
 
   return result; 
}

10) ¿que hace este codigo? ¿Como se llama este tipo de técnica de programación?

#include <stdio.h>

int f1(unsigned int i) {

   if(i <= 1) {
      return 1;
   }
   return i * f1(i - 1);
}

int  main() {
   int i = 15;
   printf("F de %d es %d\n", i, f1(i));
   return 0;
}




11) ¿que hace este codigo?
#include <stdio.h>
#include <string.h>

int main () {

   char str1[12] = "Hello";
   char str2[12] = "World";
   char str3[12];
   int  len ;

   strcpy(str3, str1);
   printf("strcpy( str3, str1) :  %s\n", str3 );

   strcat( str1, str2);
   printf("strcat( str1, str2):   %s\n", str1 );

   len = strlen(str1);
   printf("strlen(str1) :  %d\n", len );

   return 0;
}


12) ¿Que hace este codigo?

#include <stdio.h>
#include <errno.h>
#include <string.h>

extern int errno ;

int main () {

   FILE * pf;
   int errnum;
   pf = fopen ("unexist.txt", "rb");
	
   if (pf == NULL) {
   
      errnum = errno;
      fprintf(stderr, "Value of errno: %d\n", errno);
      perror("Error printed by perror");
      fprintf(stderr, "Error opening file: %s\n", strerror( errnum ));
   }
   else {
   
      fclose (pf);
   }
   
   return 0;
}

13) ¿que problemas podria traer escribir este codigo asi?

#include <stdio.h>

main() {
   FILE *fp;

   fp = fopen("/tmp/test.txt", "w+");
   fprintf(fp, "This is testing for fprintf...\n");
   fputs("This is testing for fputs...\n", fp);
   fclose(fp);
}

14) Como documentarias 1,2,3,8,9,10,12



Problema Avanzado Opcional

15)Escribir el codigo para calcular y visualizar los primeros diez numeros de la serie de fibonacci

